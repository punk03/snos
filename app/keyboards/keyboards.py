from telebot import types
import config

def create_main_menu():
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    menu = types.InlineKeyboardMarkup(row_width=2)
    profile = types.InlineKeyboardButton("üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data='profile')
    doc = types.InlineKeyboardButton("üìÉ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", url=f'{config.bot_documentation}')
    shop = types.InlineKeyboardButton("üõç –ú–∞–≥–∞–∑–∏–Ω", callback_data='shop')
    snoser = types.InlineKeyboardButton("üåê BotNet", callback_data='snoser')
    menu.add(profile)
    menu.add(doc, shop)
    menu.add(snoser)
    return menu

def create_back_button():
    """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'"""
    back_markup = types.InlineKeyboardMarkup(row_width=2)
    back = types.InlineKeyboardButton("‚ùå –ù–∞–∑–∞–¥", callback_data='back')
    back_markup.add(back)
    return back_markup

def create_channel_button():
    """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –∫–∞–Ω–∞–ª–∞ –±–æ—Ç–∞"""
    channel_markup = types.InlineKeyboardMarkup(row_width=2)
    channel = types.InlineKeyboardButton(f"‚ö°Ô∏è {config.bot_name} - –∫–∞–Ω–∞–ª", url=f'{config.bot_channel_link}')
    channel_markup.add(channel)
    return channel_markup

def create_admin_menu():
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    admin_markup = types.InlineKeyboardMarkup(row_width=2)
    add_subsribe = types.InlineKeyboardButton("–í—ã–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data='add_subsribe')
    clear_subscribe = types.InlineKeyboardButton("–ó–∞–±—Ä–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data='clear_subscribe')
    send_all = types.InlineKeyboardButton("–†–∞—Å—Å—ã–ª–∫–∞", callback_data='send_all')
    admin_markup.add(add_subsribe, clear_subscribe)
    admin_markup.add(send_all)
    return admin_markup

def create_shop_menu():
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –º–∞–≥–∞–∑–∏–Ω–∞ –ø–æ–¥–ø–∏—Å–æ–∫"""
    shop_markup = types.InlineKeyboardMarkup(row_width=2)
    sub_1 = types.InlineKeyboardButton(f"üîπ 1 –¥–µ–Ω—å - {config.subscribe_1_day}$", callback_data='sub_1')
    sub_2 = types.InlineKeyboardButton(f"üîπ 7 –¥–Ω–µ–π - {config.subscribe_7_days}$", callback_data='sub_2')
    sub_4 = types.InlineKeyboardButton(f"üîπ 30 –¥–Ω–µ–π - {config.subscribe_30_days}$", callback_data='sub_4')
    sub_6 = types.InlineKeyboardButton(f"üîπ –Ω–∞–≤—Å–µ–≥–¥–∞ - {config.subscribe_infinity_days}$", callback_data='sub_6')
    back = types.InlineKeyboardButton("‚ùå –ù–∞–∑–∞–¥", callback_data='back')
    
    shop_markup.add(sub_1, sub_2)
    shop_markup.add(sub_4, sub_6)
    shop_markup.add(back)
    return shop_markup

def create_payment_keyboard(pay_url, invoice_id, subscription_type, sub_days):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ–ø–ª–∞—Ç—ã"""
    pay_check = types.InlineKeyboardMarkup(row_width=2)
    pay_button = types.InlineKeyboardButton("üí∏ –û–ø–ª–∞—Ç–∏—Ç—å", url=pay_url)
    check = types.InlineKeyboardButton(
        "üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", 
        callback_data=f'check_status_{invoice_id}_{subscription_type}_{sub_days}'
    )
    back = types.InlineKeyboardButton("‚ùå –ù–∞–∑–∞–¥", callback_data='back')
    
    pay_check.add(pay_button, check)
    pay_check.add(back)
    return pay_check

def create_user_markup(user_id):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_markup = types.InlineKeyboardMarkup(row_width=2)
    user_profile = types.InlineKeyboardButton(
        f"{user_id}", 
        url=f'tg://openmessage?user_id={user_id}'
    )
    user_markup.add(user_profile)
    return user_markup

def create_admin_user_markup(admin_id, user_id):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∞–¥–º–∏–Ω–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    markup = types.InlineKeyboardMarkup(row_width=1)
    admin_button = types.InlineKeyboardButton(
        f"–ê–¥–º–∏–Ω: {admin_id}", 
        url=f'tg://openmessage?user_id={admin_id}'
    )
    user_button = types.InlineKeyboardButton(
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id}", 
        url=f'tg://openmessage?user_id={user_id}'
    )
    markup.add(admin_button, user_button)
    return markup 